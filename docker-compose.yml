version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: cosmochess-postgres
    environment:
      POSTGRES_DB: cosmochess
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - cosmochess-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: CosmoChess.Api/Dockerfile
    container_name: cosmochess-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=cosmochess;Username=postgres;Password=password123
    expose:
      - "5000"
    depends_on:
      - postgres
    networks:
      - cosmochess-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cosmochess-frontend
    expose:
      - "8080"
    depends_on:
      - backend
    networks:
      - cosmochess-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: cosmochess-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - cosmochess-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  cosmochess-network: